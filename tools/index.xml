<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tools on JiangX</title>
    <link>https://vincent-wuhan.github.io/tools/</link>
    <description>Recent content in Tools on JiangX</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 22 Apr 2020 16:36:38 +0800</lastBuildDate>
    
	<atom:link href="https://vincent-wuhan.github.io/tools/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Git合并冲突问题处理</title>
      <link>https://vincent-wuhan.github.io/tools/git_merge_conflict_fixed/</link>
      <pubDate>Wed, 22 Apr 2020 16:36:38 +0800</pubDate>
      
      <guid>https://vincent-wuhan.github.io/tools/git_merge_conflict_fixed/</guid>
      <description>Gitlab分支合并请求冲突问题解决方法  问题  Gitlab上多个开发分支并行开发时,难免出现gitlab平台无法自动合入目标分支的情形,此时需要手动合并.
例如:
gitlab分支: remotes/origin/master remotes/origin/dev/A dev/A合入master时自动合并失败   解决方法   本地checkout出该待合并的开发分支dev/A
git checkout -b dev/A remotes/origin/dev/A  本地开发分支合并目标分支,并手动修改冲突
git merge --no-ff origin/master  合并后的分支重新提交待合并的开发分支
git push origin dev/A  Gitlab重新处理合并请求,完成合并</description>
    </item>
    
    <item>
      <title>Ovs 安装</title>
      <link>https://vincent-wuhan.github.io/tools/ovs-install/</link>
      <pubDate>Sun, 01 Mar 2020 20:37:31 +0800</pubDate>
      
      <guid>https://vincent-wuhan.github.io/tools/ovs-install/</guid>
      <description> 移除bridge rmmod bridge
 关闭bridge模块。可先通过lsmod | grep bridge 查看，然后用rmmod bridge关闭，若出现bridge正在被另一模块使用导致无法关闭的错误，则需要先关闭正在使用bridge的模块。
 安装OVS apt-get install openvswitch-switch
 查看安装结果 ovs-vsctl show
  </description>
    </item>
    
    <item>
      <title>GitLab环境搭建</title>
      <link>https://vincent-wuhan.github.io/tools/gitlab_env_install/</link>
      <pubDate>Sun, 01 Mar 2020 13:10:41 +0800</pubDate>
      
      <guid>https://vincent-wuhan.github.io/tools/gitlab_env_install/</guid>
      <description>docker安装 gitlab安装 gitlab-runner安装 配置gitlab runner支持dind gitlab-ci dind gitlab常用配置 gitlab集成kubernetes gitlab-ci 中docker命令失败问题处理  docker安装  安装
apt-get install docker.io   gitlab安装  image   docker pull beginor/gitlab-ce:11.3.0-ce.0
  pre-run  gitlab外挂卷，用于保存gitlab平台的持久化存储配置(etc),日志(log),数据(data)
 sudo mkdir -p /mnt/sda1/gitlab/etc sudo mkdir -p /mnt/sda1/gitlab/log sudo mkdir -p /mnt/sda1/gitlab/data
  run
docker run \ --detach \ --publish 8443:443 \ --publish 8080:80 \ --name gitlab \ --restart unless-stopped \ --volume /mnt/sda1/gitlab/etc:/etc/gitlab \ --volume /mnt/sda1/gitlab/log:/var/log/gitlab \ --volume /mnt/sda1/gitlab/data:/var/opt/gitlab \ beginor/gitlab-ce:11.</description>
    </item>
    
    <item>
      <title>Git_cli</title>
      <link>https://vincent-wuhan.github.io/tools/git_cli/</link>
      <pubDate>Sun, 01 Mar 2020 13:00:48 +0800</pubDate>
      
      <guid>https://vincent-wuhan.github.io/tools/git_cli/</guid>
      <description>常用命令 典型应用场景  日志修改 Git review配置   常用命令    命令 说明     git config &amp;ndash;global core.editor vim 设置全局编辑器为vim   git config &amp;ndash;global user.name &amp;ldquo;user&amp;rdquo; 设置用户名   git config &amp;ndash;global user.email &amp;ldquo;user@email.com&amp;rdquo; 设置用户邮箱   git remote add gerrit http://user:password@10.10.10.10:8080/a/project.git 设置远程gerrit        典型应用场景 日志修改  修改最近一次   git commit &amp;ndash;amend
  修改历史中的某个记录   1.</description>
    </item>
    
    <item>
      <title>如何pip下载和离线安装第三方包</title>
      <link>https://vincent-wuhan.github.io/tools/how-to-download-and-offline-install-pip-packing/</link>
      <pubDate>Tue, 04 Feb 2020 18:15:12 +0800</pubDate>
      
      <guid>https://vincent-wuhan.github.io/tools/how-to-download-and-offline-install-pip-packing/</guid>
      <description> PiP离线包下载安装说明 下载依赖包  PIP为存放离线包的路径，也是安装离线包时的仓库路径
  创建目录
mkdir -p PIP  下载离线pip包
pip download docker-py -d &amp;quot;PIP&amp;quot; -i https://pypi.tuna.tsinghua.edu.cn/simple/    -d 指定下载目录 -i 指定python源
 安装依赖包  拷贝离线包到指定Host 安装离线包   以要安装的pip包为docker-py为例
 pip install --no-index --find-links=/home/mano/docker-py/ docker-py   &amp;ndash;no-index忽略包索引 &amp;ndash;find-links仅从链接地址中寻找依赖 docker-py为安装的离线包
 </description>
    </item>
    
    <item>
      <title>hugo使用笔记</title>
      <link>https://vincent-wuhan.github.io/tools/how-to-use-hugo/</link>
      <pubDate>Fri, 31 Jan 2020 20:11:01 +0800</pubDate>
      
      <guid>https://vincent-wuhan.github.io/tools/how-to-use-hugo/</guid>
      <description> hugo 博客操作  创建blog hugo new site blog  blog为博客存放目录
 创建博客文章  hugo new path/content.md
 本地预览  hugo server &amp;ndash;buildDrafts
 编译web格式预发布  hugo &amp;ndash;theme=m10c &amp;ndash;base-url=&amp;ldquo;http://vincnet-wuhan.github.io&amp;quot; &amp;ndash;buildDrafts
 编译生成的文件在blog下的public目录下
  发布到github  切换到public目录，初始化本地仓库
cd public git init git add . git commit -m &#39;message&#39; git remote add origin https://github.com/vincent-wuhan/vincent-wuhan.github.io.git git push -u origin master  </description>
    </item>
    
  </channel>
</rss>