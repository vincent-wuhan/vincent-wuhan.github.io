<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Onaps on JiangX</title>
    <link>https://vincent-wuhan.github.io/onap/</link>
    <description>Recent content in Onaps on JiangX</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 24 Aug 2019 17:17:38 +0800</lastBuildDate>
    
	<atom:link href="https://vincent-wuhan.github.io/onap/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ONAP微服务之NFVO与VNFM两种部署模式</title>
      <link>https://vincent-wuhan.github.io/onap/msb/</link>
      <pubDate>Sat, 24 Aug 2019 17:17:38 +0800</pubDate>
      
      <guid>https://vincent-wuhan.github.io/onap/msb/</guid>
      <description>微服务 微服务路由 路由发现是微服务体系中一个重要组成，直白的讲，“路由”是指根据请求URL，把请求分配到对应的处理程序
从服务发现工作流程理解一次服务请求的过程  请求来之前需要服务提供者工作正常 服务提供者启动时，将服务名称、服务器地址注册到服务配置中心 服务消费者将请求发送给服务配置中心，服务配置中心根据请求URL获取匹配需要调度的服务机器列表 一次请求到来，经过路由分发定位到一组服务，再通过负载均衡算法后，选择一台服务器调用响应请求  负载均衡算法  轮询法，将请求按顺序轮流地分配到后端服务器上，它均衡地对待后端的每一台服务器，而不关心服务器实际的连接数和当前的系统负载 随机发，通过系统的随机算法，根据后端服务器的列表大小值来随机选取其中的一台服务器进行访问。由概率统计理论可以得知，随着客户端调用服务端的次数增多，其实际效果越来越接近于平均分配调用量到后端的每一台服务器，也就是轮询的结果 加权轮询法，不同的后端服务器可能机器的配置和当前系统的负载并不相同，因此它们的抗压能力也不相同。给配置高、负载低的机器配置更高的权重，让其处理更多的请；而配置低、负载高的机器，给其分配较低的权重，降低其系统负载，加权轮询能很好地处理这一问题，并将请求顺序且按照权重分配到后端 最小连接数法，最小连接数算法比较灵活和智能，由于后端服务器的配置不尽相同，对于请求的处理有快有慢，它是根据后端服务器当前的连接情况，动态地选取其中当前积压连接数最少的一台服务器来处理当前的请求，尽可能地提高后端服务的利用效率，将负责合理地分流到每一台服务器 源地址哈希法，源地址哈希的思想是根据获取客户端的IP地址，通过哈希函数计算得到的一个数值，用该数值对服务器列表的大小进行取模运算，得到的结果便是客服端要访问服务器的序号。采用源地址哈希法进行负载均衡，同一IP地址的客户端，当后端服务器列表不变时，它每次都会映射到同一台后端服务器进行访问  部署方式 NFVO和VNFM解耦部署 NFVO_SERVER（a_ip:a_port/nfvo_uri） |________________ | MSB(O_IP:O_PORT)========================== | MSB(M_IP:M_PORT)=============== |________ | VNFM_SERVER (c_ip:c_port/vnfm_uri)   参数说明     模块 说明     NFVO_SERVER O层微服务模块   VNFM_SERVER M层微服务模块   MSB(O_IP:O_PORT) O层微服务总线，O_IP为O层微服务总线IP地址，O_PORT为总线端口   MSB(M_IP:M_PORT) M层微服务总线，M_IP为M层微服务总线IP地址，M_PORT为总线端口   a_ip:a_port/nfvo_uri O层微服务模块提供的服务API内部url, a_ip为集群ip，外部不可访问   c_ip:c_port/vnfm_uri M层微服务模块提供的服务API内部url, c_ip为集群ip，外部不可访问   O_IP:O_PORT/nfvo_uri O层微服务API在O层MSB总线上暴露的访问URL   M_IP:M_PORT/vnfm_uri M层微服务API在M层MSB总线上暴露的访问URL         一条MSB上访问微服务内部api的转换过程  原理是，请求发送到微服务总线后，微服务总线根据请求uri在服务注册中心列表中查找匹配路由，然后将请求转发给找到的服务器地址处理</description>
    </item>
    
  </channel>
</rss>